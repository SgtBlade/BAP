import React from 'react'
import { useObserver } from "mobx-react-lite";
import style from "./stepThree.module.css";
import ReactQuill, {Quill} from 'react-quill';
import 'react-quill/dist/quill.snow.css';
import ImageCompress from 'quill-image-compress';
Quill.register('modules/imageCompress', ImageCompress);


const CreateProjectFormStepThree = ({description}) => {

  //Code for development only
  //Used to see how large the size will be of the project text generated by quill
  function bytesToSize(bytes) {
    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];
    if (bytes === 0) return '0 Byte';
    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));
    document.querySelector('.filesize').textContent = Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];
 }

 //activates when quill receives input
 //Displays the code quill generates & places empty lines for visibility
  const handleChange = (html) => {
    description[1](html);
    bytesToSize(encodeURI(html).split(/%(?:u[0-9A-F]{2})?[0-9A-F]{2}|./).length - 1)
    let test = html.split(">").join('> \n').split('</').join('\n </');
    document.querySelector('.codeDisplay').textContent = test;
    console.log(html)
  }

  //Options that are enabeled on the quill 
  const modules = {
    toolbar: [

      ['bold', 'italic', 'underline', 'strike'],        // toggled buttons
      ['blockquote', 'code-block'],
    
      [{ 'header': 1 }, { 'header': 2 }, { 'header': 3 }],               // custom button values
      [{ 'list': 'ordered'}, { 'list': 'bullet' }],
      [{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript
      [{ 'indent': '-1'}, { 'indent': '+1' }],         // text direction
    
      [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
    
      [{ 'color': [] }, { 'background': [] }],
      [{ 'align': [] }],
    
      ['clean']   

    ]
    ,
    imageCompress: {
      quality: 0.4, // default
      maxWidth: 720, // default
      maxHeight: 405, // default
      imageType: 'image/jpeg', // default
      debug: false, // default
    }
  }

  return useObserver(() => (
    <div className={style.wrap}>
          <ReactQuill 
          theme={'snow'}
          onChange={handleChange}
          value={description[0]}
          modules={modules}
          style={{maxWidth: 500}} 
          />

          <div className={`${style.codeBlok}`}>
              <p className={`filesize ${style.stringSize}`}></p>
              <article className={`codeDisplay `}> </article>
          </div>

    </div>
  ));
};

export default CreateProjectFormStepThree;