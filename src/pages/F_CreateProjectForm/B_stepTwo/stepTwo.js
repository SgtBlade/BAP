import React, {useState} from 'react'
import { useObserver } from "mobx-react-lite";
import style from "./stepTwo.module.css";
import parentStyle from "../createProjectForm.module.css";
import ReactQuill, {Quill} from 'react-quill';
import 'react-quill/dist/quill.snow.css';
import ImageCompress from 'quill-image-compress';
Quill.register('modules/imageCompress', ImageCompress);


const CreateProjectFormStepTwo = ({description}) => {
  const [readOnly, setReadOnly] = useState(false)

  //Code for development only
  //Used to see how large the size will be of the project text generated by quill
  function bytesToSize(bytes) {
    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];
    if (bytes === 0) return '0 Byte';
    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));
    document.querySelector('.filesize').textContent = Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];
 }

 //activates when quill receives input
 //Displays the code quill generates & places empty lines for visibility
  const handleChange = (html) => {
    description.func(html);
    bytesToSize(encodeURI(html).split(/%(?:u[0-9A-F]{2})?[0-9A-F]{2}|./).length - 1)

  }

  //Options that are enabeled on the quill 
  const modules = {
    toolbar: [

      ['bold', 'italic', 'underline', 'strike'],        // toggled buttons
      ['blockquote', 'code-block'],
    
      [{ 'header': 1 }, { 'header': 2 }],
      [{ 'list': 'ordered'}, { 'list': 'bullet' }],
      [{ 'indent': '-1'}, { 'indent': '+1' }],  // text direction
    
      [{ 'header': [1, 2, 3, 4, 5, 6, false] }],  
    
      [{ 'color': [] }, { 'background': [] }],
      [{ 'align': [] }],
      ['link', 'image', 'video'], ['clean']

    

    ]
    ,
    imageCompress: {
      quality: 0.4, // default
      maxWidth: 720, // default
      maxHeight: 405, // default
      imageType: 'image/jpeg', // default
      debug: false, // default
    }
  }

  return useObserver(() => (
    <div className={style.wrap}>

          <label className={`${style.midsection__item}`} htmlFor={'budget'}>
            <p onClick={() => setReadOnly(!readOnly)} className={`${parentStyle.inputTitle}`}>TOGGLE READ ONLY {readOnly}</p>
            <p className={`${parentStyle.inputTitle}`}>Wat moeten de mensen weten over je project?</p>
            <p className={`${parentStyle.inputSubtitle}`}>Geef hier de uitleg over je project.</p>
            <p className={`${parentStyle.inputDetail} filesize`}></p>
          </label>
          <ReactQuill 
          theme={'snow'}
          onChange={handleChange}
          value={description.value}
          modules={modules} 
          style={{height: '80vh', marginTop: '2rem', marginBottom: '6rem'}}
          readOnly={readOnly}
          />

        <div className={style.checkbox}>
          <p className={`${parentStyle.inputSubtitle}`}>Geef hier de uitleg over je project.</p>
            <label htmlFor={'option1'}>
              <input onChange={() => {}} className={``} name={'option1'} id={'option1'} value={false}  type={'checkbox'}/>
              Uitgebreide, duidelijke <strong>uitleg</strong> over het <strong>project</strong>.
            </label>  
            <label htmlFor={'option2'}>
              <input onChange={() => {}} className={``} name={'option2'} id={'option2'} value={false}  type={'checkbox'}/>
              Een <strong>antwoord</strong> op de vraag <strong>“Wat wil je met je project teweegbrengen?”</strong>
            </label>  
            <label htmlFor={'option3'}>
  
              <input onChange={() => {}} className={``} name={'option3'} id={'option3'} value={false}  type={'checkbox'}/>
              Legt uit <strong>hoe kunst</strong> en <strong>creativiteit ingezet</strong> wordt bij dit project.

            </label>  

        </div>
    </div>
  ));
};

export default CreateProjectFormStepTwo;